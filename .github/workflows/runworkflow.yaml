name: Deploy to EC2
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        role-session-name: OIDCSession
        aws-region: 'us-east-1'

    - name: create a ssh key aws
      id: ssh-key
      run: |
        aws ec2 delete-key-pair --key-name QWENKey || true
        aws ec2 create-key-pair --key-name QWENKey --query 'KeyMaterial' --output text >> $HOME/QWENKey.pem
    
    - name: set permission
      run: |
        chmod 600 $HOME/QWENKey.pem
        cat $HOME/QWENKey.pem
          
    - name: create a spot instance
      run: |
        REQUEST_ID=$(aws ec2 request-spot-instances \
        --spot-price "0.05" \
        --instance-count 1 \
        --type "one-time" \
        --launch-specification '{"ImageId":"ami-0c7217cdde317cfec","InstanceType":"t2.micro","KeyName":"QWENKey"}' \
        --query 'SpotInstanceRequests[0].SpotInstanceRequestId' \
        --output text)
        aws ec2 wait spot-instance-request-fulfilled --spot-instance-request-ids $REQUEST_ID
        INSTANCE_ID=$(aws ec2 describe-spot-instance-requests --spot-instance-request-ids $REQUEST_ID --query 'SpotInstanceRequests[*].InstanceId' --output text)
        HOSTNAME=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query 'Reservations[0].Instances[0].PublicDnsName' --output text)
        echo "HOST=$HOSTNAME" >> $GITHUB_ENV
        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV 

    # - name: Install docker on EC2
    #   run: |
    #     while ! nc -z ${{ env.HOST }} 22; do sleep 10; done
    #     ssh -o StrictHostKeyChecking=no -i $HOME/QWENKey.pem ubuntu@${{ env.HOST }} '
    #       sudo apt-get update
    #       sudo apt-get install -y docker.io
    #       sudo systemctl start docker
    #       sudo systemctl enable docker
    #       sudo groupadd docker
    #       sudo usermod -aG docker $USER
    #       newgrp docker
    #       # docker-compose
    #       sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    #       sudo chmod +x /usr/local/bin/docker-compose
    #     '
    - name: Copy files to EC2
      run: |
        ls -la
        scp -o StrictHostKeyChecking=no -i $HOME/QWENKey.pem -r ./ ubuntu@${{ env.HOST }}:/home/ubuntu/gwen 


    - name:  Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i $HOME/QWENKey.pem ubuntu@${{ env.HOST }} '
          cd /home/ubuntu/gwen
          mkdir -p gwen/output
          docker-compose -f gwen/docker-compose.yml build
          docker-compose -f gwen/docker-compose.yml run gwen
        '
    
    - name: Copy files from EC2
      run : |
        mkdir -p output
        scp -o StrictHostKeyChecking=no -i $HOME/QWENKey.pem -r ubuntu@${{ env.HOST }}:/home/ubuntu/gwen/output output
        ls -la output

    # - name: upload the file to s3
    #   run: aws s3 cp ./output s3://gwen-output --recursive

    - name: stop instance
      run: |
        aws ec2 terminate-instances --instance-ids ${{ env.INSTANCE_ID }}
